// prisma/schema.prisma
generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "mysql"
    url      = env("DATABASE_URL")
}

model User {
    id        Int      @id @default(autoincrement())
    email     String   @unique
    password  String
    name      String
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
}

model Service {
    id          Int      @id @default(autoincrement())
    title       String   @db.VarChar(255)
    description String   @db.Text
    imgUrl      String   @db.VarChar(255)
    createdAt   DateTime @default(now())
    updatedAt   DateTime @updatedAt
}

model Client {
    id          Int      @id @default(autoincrement())
    name        String   @db.VarChar(255)
    description String?  @db.Text
    imgUrl      String   @db.VarChar(255)
    createdAt   DateTime @default(now())
    updatedAt   DateTime @updatedAt
}

model Review {
    id         Int      @id @default(autoincrement())
    clientName String   @db.VarChar(255)
    rating     Int      @db.TinyInt
    comment    String   @db.Text
    status     String   @default("pending")
    createdAt  DateTime @default(now())
    updatedAt  DateTime @updatedAt
}

model Appointment {
    id          Int      @id @default(autoincrement())
    fullName    String   @db.VarChar(255)
    phoneNumber String   @db.VarChar(20)
    email       String?  @db.VarChar(255)
    date        DateTime
    category    String   @db.VarChar(50)
    location    String?  @db.VarChar(255)
    status      String   @default("unread")
    createdAt   DateTime @default(now())
    updatedAt   DateTime @updatedAt
}

model Category {
    id        String    @id @default(uuid())
    name      String    @unique
    createdAt DateTime  @default(now())
    updatedAt DateTime  @updatedAt
    packages  Package[]
}

model Package {
    id           String        @id @default(uuid())
    categoryId   String
    name         String
    description  String?
    imageUrl     String?
    createdAt    DateTime      @default(now())
    updatedAt    DateTime      @updatedAt
    category     Category      @relation(fields: [categoryId], references: [id])
    serviceItems ServiceItem[]
}

model ServiceItem {
    id        String   @id @default(uuid())
    packageId String
    name      String
    price     Float
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
    package   Package  @relation(fields: [packageId], references: [id])
}

model Package2 {
    id        Int      @id @default(autoincrement())
    imageUrl  String   @db.Text
    title     String   @db.VarChar(255)
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    @@map("package2")
}
